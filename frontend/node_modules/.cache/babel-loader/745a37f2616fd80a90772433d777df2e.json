{"ast":null,"code":"var _jsxFileName = \"/Users/nanyu/Documents/GitHub/hack112/frontend/src/components/TranslatorCon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TextForm from './TextForm';\nimport { Deploy } from './Deploy';\nimport { Button, Typography, makeStyles, Fade } from '@material-ui/core';\nimport DefinitionTable from './DefinitionTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  translatorContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    // justifyContent: 'center'\n    margin: 20\n  },\n  mainContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  highlightTextStyle: {\n    textDecoration: 'none',\n    color: 'black',\n    transition: \"background 1.5s color 1.5s\",\n    \"&:hover\": {\n      color: \"red\"\n    }\n  },\n  inline: {\n    display: 'flex',\n    flexDirection: 'row',\n    m: 2\n  }\n}));\n\nfunction TranslatorCon() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState([]);\n  const [error, setErrorTrue] = useState(false);\n  const prefix = '/api';\n  const classes = useStyles(); // useEffect(() => {\n  //   fetch(prefix).then(response => {\n  //     if(response.status === 200){\n  //       return response.json()\n  //     }  \n  //   }).then(data => {\n  //     console.log(data)\n  //     setInput(data)})\n  //   .then(error => console.log(error))\n  // }, [])\n\n  const onTranslate = () => {\n    console.log(input);\n    fetch(prefix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(input)\n    }).then(response => response.json()).then(data => {\n      if (data !== null) {\n        setErrorTrue(false);\n        setOutput(data.output);\n        console.log(data.output);\n        console.log('success', data.output);\n      } else {\n        setErrorTrue(true);\n      }\n    }).then(error => console.log(error));\n  };\n\n  const handleInput = event => {\n    setInput(event.target.value); // console.log(event.target.value)\n  };\n\n  const words = [{\n    word: 'hi',\n    def: 'ho',\n    ex: ['he', 'ha']\n  }, {\n    word: 'yi',\n    def: 'yo',\n    ex: ['ye', 'ya']\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.translatorContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        onChange: handleInput,\n        label: \"Enter a sentence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onTranslate,\n        children: \"GENZLATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Deploy, {\n        data: input.slang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }, this), output !== null && Object.keys(output).forEach(function (key) {\n      console.log('hii', key, output[key]);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        children: output[key].Word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TranslatorCon, \"NgQ3I2eJ2PJVBcl1yWlyKcvAo8U=\", false, function () {\n  return [useStyles];\n});\n\n_c = TranslatorCon;\nexport default TranslatorCon;\n\nvar _c;\n\n$RefreshReg$(_c, \"TranslatorCon\");","map":{"version":3,"sources":["/Users/nanyu/Documents/GitHub/hack112/frontend/src/components/TranslatorCon.js"],"names":["React","useState","useEffect","TextForm","Deploy","Button","Typography","makeStyles","Fade","DefinitionTable","useStyles","theme","translatorContainer","display","flexDirection","justifyContent","margin","mainContainer","highlightTextStyle","textDecoration","color","transition","inline","m","TranslatorCon","input","setInput","output","setOutput","error","setErrorTrue","prefix","classes","onTranslate","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","handleInput","event","target","value","words","word","def","ex","slang","Object","keys","forEach","key","Word"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport TextForm from './TextForm'\nimport {Deploy} from './Deploy'\nimport {Button, Typography, makeStyles, Fade} from '@material-ui/core'\nimport DefinitionTable from './DefinitionTable'\n\n\nconst useStyles = makeStyles(theme => ({\n    translatorContainer: {\n        display:'flex',\n       flexDirection: 'column',\n        justifyContent:'center',\n        // justifyContent: 'center'\n        margin: 20\n        \n    },\n\n    mainContainer: {\n        display:'flex',\n      \n        flexDirection: 'column',\n        justifyContent:'center'\n        \n    },\n\n    highlightTextStyle:{\n        textDecoration: 'none',\n        color:'black',\n        transition: \"background 1.5s color 1.5s\",\n        \"&:hover\": {  \n            color: \"red\"\n          }\n    },\n\n    inline:{\n        display: 'flex',\n        flexDirection:'row',\n        m:2\n        \n    }\n\n\n}) )\n\nfunction TranslatorCon(){\n    const [input, setInput] = useState('')\n    const [output, setOutput] = useState([])\n    const [error, setErrorTrue] = useState(false)\n    const prefix = '/api'\n    const classes = useStyles()\n  \n    // useEffect(() => {\n    //   fetch(prefix).then(response => {\n    //     if(response.status === 200){\n    //       return response.json()\n    //     }  \n    //   }).then(data => {\n    //     console.log(data)\n    //     setInput(data)})\n    //   .then(error => console.log(error))\n    // }, [])\n  \n    const onTranslate = () => {\n        console.log(input)\n      fetch(prefix, {\n        method:'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n           },\n        body: JSON.stringify(input)\n      }).then(response => response.json()).then(\n        data => {\n            if(data!== null){\n                setErrorTrue(false)\n                setOutput(data.output)\n                console.log(data.output)\n                console.log('success', data.output)\n            }\n            else{\n                setErrorTrue(true)\n            }\n\n            \n        }).then(error => console.log(error))\n    }\n\n    const handleInput = (event) => {\n        setInput(event.target.value)\n        // console.log(event.target.value)\n    }\n\n    const words = [\n        {word: 'hi', def:'ho', ex:['he', 'ha']},\n\n        {word: 'yi', def:'yo', ex:['ye', 'ya']}\n    ]\n\n    return (\n    <div className={classes.mainContainer}>\n       <div className={classes.translatorContainer}>\n       <TextForm\n       onChange={handleInput}\n       label=\"Enter a sentence\"\n       />\n       <Button variant='outlined'\n       onClick={onTranslate}\n       >GENZLATE</Button>\n       <Deploy data={input.slang} />\n       </div> \n\n        {\n            output !== null && Object.keys(output).forEach(function(key){\n                console.log('hii', key, output[key])\n                return (\n                    <Typography>\n                        {output[key].Word}\n                    </Typography>\n                )\n            })\n        }\n\n        </div>\n      \n    )\n  \n\n}\n\nexport default TranslatorCon"]},"metadata":{},"sourceType":"module"}